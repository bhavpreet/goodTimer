// Code generated by goctl. DO NOT EDIT.
package handler

import (
	"net/http"

	"github.com/bhavpreet/goodTimer/server/internal/svc"

	"github.com/zeromicro/go-zero/rest"
)

func RegisterHandlers(server *rest.Server, serverCtx *svc.ServiceContext) {
	server.AddRoutes(
		[]rest.Route{
			{
				Method:  http.MethodPost,
				Path:    "/round",
				Handler: AddRoundHandler(serverCtx),
			},
			{
				Method:  http.MethodGet,
				Path:    "/rounds",
				Handler: ListRoundsHandler(serverCtx),
			},
			{
				Method:  http.MethodDelete,
				Path:    "/round/:round",
				Handler: DeleteRoundHandler(serverCtx),
			},
			{
				Method:  http.MethodPatch,
				Path:    "/round/:round/setCurrent",
				Handler: SetRoundCurrentHandler(serverCtx),
			},
			{
				Method:  http.MethodGet,
				Path:    "/round/getCurrent",
				Handler: GetCurrentRoundHandler(serverCtx),
			},
			{
				Method:  http.MethodGet,
				Path:    "/round/:round/bib/getCurrent",
				Handler: GetCurrentBibHandler(serverCtx),
			},
			{
				Method:  http.MethodPost,
				Path:    "/round/:round/bib",
				Handler: AddBibHandler(serverCtx),
			},
			{
				Method:  http.MethodGet,
				Path:    "/round/:round/bib/:bib",
				Handler: GetBibHandler(serverCtx),
			},
			{
				Method:  http.MethodGet,
				Path:    "/round/:round/bibs",
				Handler: ListBibsHandler(serverCtx),
			},
			{
				Method:  http.MethodDelete,
				Path:    "/round/:round/bib/:bib",
				Handler: DeleteBibHandler(serverCtx),
			},
			{
				Method:  http.MethodPatch,
				Path:    "/round/:round/bib/:bib/setStatus",
				Handler: SetBibStatusHandler(serverCtx),
			},
			{
				Method:  http.MethodPatch,
				Path:    "/round/:round/bib/:bib/setCurrent",
				Handler: SetBibCurrentHandler(serverCtx),
			},
		},
	)
}
